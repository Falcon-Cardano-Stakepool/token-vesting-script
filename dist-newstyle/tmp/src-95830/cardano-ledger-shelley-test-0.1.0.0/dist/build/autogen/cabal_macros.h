/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package cardano-ledger-shelley-test-0.1.0.0 */
#ifndef VERSION_cardano_ledger_shelley_test
#define VERSION_cardano_ledger_shelley_test "0.1.0.0"
#endif /* VERSION_cardano_ledger_shelley_test */
#ifndef MIN_VERSION_cardano_ledger_shelley_test
#define MIN_VERSION_cardano_ledger_shelley_test(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_shelley_test */
/* package QuickCheck-2.14.2 */
#ifndef VERSION_QuickCheck
#define VERSION_QuickCheck "2.14.2"
#endif /* VERSION_QuickCheck */
#ifndef MIN_VERSION_QuickCheck
#define MIN_VERSION_QuickCheck(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  14 || \
  (major1) == 2 && (major2) == 14 && (minor) <= 2)
#endif /* MIN_VERSION_QuickCheck */
/* package base-4.14.3.0 */
#ifndef VERSION_base
#define VERSION_base "4.14.3.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  14 || \
  (major1) == 4 && (major2) == 14 && (minor) <= 3)
#endif /* MIN_VERSION_base */
/* package base16-bytestring-1.0.1.0 */
#ifndef VERSION_base16_bytestring
#define VERSION_base16_bytestring "1.0.1.0"
#endif /* VERSION_base16_bytestring */
#ifndef MIN_VERSION_base16_bytestring
#define MIN_VERSION_base16_bytestring(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_base16_bytestring */
/* package bytestring-0.10.12.0 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.10.12.0"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 12)
#endif /* MIN_VERSION_bytestring */
/* package cardano-binary-1.5.0 */
#ifndef VERSION_cardano_binary
#define VERSION_cardano_binary "1.5.0"
#endif /* VERSION_cardano_binary */
#ifndef MIN_VERSION_cardano_binary
#define MIN_VERSION_cardano_binary(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  5 || \
  (major1) == 1 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_binary */
/* package cardano-crypto-1.1.0 */
#ifndef VERSION_cardano_crypto
#define VERSION_cardano_crypto "1.1.0"
#endif /* VERSION_cardano_crypto */
#ifndef MIN_VERSION_cardano_crypto
#define MIN_VERSION_cardano_crypto(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_crypto */
/* package cardano-crypto-class-2.0.0 */
#ifndef VERSION_cardano_crypto_class
#define VERSION_cardano_crypto_class "2.0.0"
#endif /* VERSION_cardano_crypto_class */
#ifndef MIN_VERSION_cardano_crypto_class
#define MIN_VERSION_cardano_crypto_class(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_crypto_class */
/* package cardano-crypto-test-1.3.0 */
#ifndef VERSION_cardano_crypto_test
#define VERSION_cardano_crypto_test "1.3.0"
#endif /* VERSION_cardano_crypto_test */
#ifndef MIN_VERSION_cardano_crypto_test
#define MIN_VERSION_cardano_crypto_test(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_crypto_test */
/* package cardano-crypto-wrapper-1.3.0 */
#ifndef VERSION_cardano_crypto_wrapper
#define VERSION_cardano_crypto_wrapper "1.3.0"
#endif /* VERSION_cardano_crypto_wrapper */
#ifndef MIN_VERSION_cardano_crypto_wrapper
#define MIN_VERSION_cardano_crypto_wrapper(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_crypto_wrapper */
/* package cardano-ledger-byron-0.1.0.0 */
#ifndef VERSION_cardano_ledger_byron
#define VERSION_cardano_ledger_byron "0.1.0.0"
#endif /* VERSION_cardano_ledger_byron */
#ifndef MIN_VERSION_cardano_ledger_byron
#define MIN_VERSION_cardano_ledger_byron(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_byron */
/* package cardano-ledger-byron-test-1.3.0 */
#ifndef VERSION_cardano_ledger_byron_test
#define VERSION_cardano_ledger_byron_test "1.3.0"
#endif /* VERSION_cardano_ledger_byron_test */
#ifndef MIN_VERSION_cardano_ledger_byron_test
#define MIN_VERSION_cardano_ledger_byron_test(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_byron_test */
/* package cardano-ledger-core-0.1.0.0 */
#ifndef VERSION_cardano_ledger_core
#define VERSION_cardano_ledger_core "0.1.0.0"
#endif /* VERSION_cardano_ledger_core */
#ifndef MIN_VERSION_cardano_ledger_core
#define MIN_VERSION_cardano_ledger_core(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_core */
/* package cardano-ledger-pretty-0.1.0.0 */
#ifndef VERSION_cardano_ledger_pretty
#define VERSION_cardano_ledger_pretty "0.1.0.0"
#endif /* VERSION_cardano_ledger_pretty */
#ifndef MIN_VERSION_cardano_ledger_pretty
#define MIN_VERSION_cardano_ledger_pretty(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_pretty */
/* package cardano-ledger-shelley-0.1.0.0 */
#ifndef VERSION_cardano_ledger_shelley
#define VERSION_cardano_ledger_shelley "0.1.0.0"
#endif /* VERSION_cardano_ledger_shelley */
#ifndef MIN_VERSION_cardano_ledger_shelley
#define MIN_VERSION_cardano_ledger_shelley(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_ledger_shelley */
/* package cardano-prelude-0.1.0.0 */
#ifndef VERSION_cardano_prelude
#define VERSION_cardano_prelude "0.1.0.0"
#endif /* VERSION_cardano_prelude */
#ifndef MIN_VERSION_cardano_prelude
#define MIN_VERSION_cardano_prelude(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_prelude */
/* package cardano-prelude-test-0.1.0.0 */
#ifndef VERSION_cardano_prelude_test
#define VERSION_cardano_prelude_test "0.1.0.0"
#endif /* VERSION_cardano_prelude_test */
#ifndef MIN_VERSION_cardano_prelude_test
#define MIN_VERSION_cardano_prelude_test(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_prelude_test */
/* package cardano-protocol-tpraos-0.1.0.0 */
#ifndef VERSION_cardano_protocol_tpraos
#define VERSION_cardano_protocol_tpraos "0.1.0.0"
#endif /* VERSION_cardano_protocol_tpraos */
#ifndef MIN_VERSION_cardano_protocol_tpraos
#define MIN_VERSION_cardano_protocol_tpraos(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_protocol_tpraos */
/* package cardano-slotting-0.1.0.0 */
#ifndef VERSION_cardano_slotting
#define VERSION_cardano_slotting "0.1.0.0"
#endif /* VERSION_cardano_slotting */
#ifndef MIN_VERSION_cardano_slotting
#define MIN_VERSION_cardano_slotting(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_slotting */
/* package cborg-0.2.5.0 */
#ifndef VERSION_cborg
#define VERSION_cborg "0.2.5.0"
#endif /* VERSION_cborg */
#ifndef MIN_VERSION_cborg
#define MIN_VERSION_cborg(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 5)
#endif /* MIN_VERSION_cborg */
/* package compact-map-0.1.0.0 */
#ifndef VERSION_compact_map
#define VERSION_compact_map "0.1.0.0"
#endif /* VERSION_compact_map */
#ifndef MIN_VERSION_compact_map
#define MIN_VERSION_compact_map(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_compact_map */
/* package containers-0.6.5.1 */
#ifndef VERSION_containers
#define VERSION_containers "0.6.5.1"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 5)
#endif /* MIN_VERSION_containers */
/* package data-default-class-0.1.2.0 */
#ifndef VERSION_data_default_class
#define VERSION_data_default_class "0.1.2.0"
#endif /* VERSION_data_default_class */
#ifndef MIN_VERSION_data_default_class
#define MIN_VERSION_data_default_class(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 2)
#endif /* MIN_VERSION_data_default_class */
/* package deepseq-1.4.4.0 */
#ifndef VERSION_deepseq
#define VERSION_deepseq "1.4.4.0"
#endif /* VERSION_deepseq */
#ifndef MIN_VERSION_deepseq
#define MIN_VERSION_deepseq(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 4)
#endif /* MIN_VERSION_deepseq */
/* package directory-1.3.6.0 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.6.0"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 6)
#endif /* MIN_VERSION_directory */
/* package generic-random-1.5.0.0 */
#ifndef VERSION_generic_random
#define VERSION_generic_random "1.5.0.0"
#endif /* VERSION_generic_random */
#ifndef MIN_VERSION_generic_random
#define MIN_VERSION_generic_random(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  5 || \
  (major1) == 1 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_VERSION_generic_random */
/* package hashable-1.3.2.0 */
#ifndef VERSION_hashable
#define VERSION_hashable "1.3.2.0"
#endif /* VERSION_hashable */
#ifndef MIN_VERSION_hashable
#define MIN_VERSION_hashable(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 2)
#endif /* MIN_VERSION_hashable */
/* package hedgehog-1.0.5 */
#ifndef VERSION_hedgehog
#define VERSION_hedgehog "1.0.5"
#endif /* VERSION_hedgehog */
#ifndef MIN_VERSION_hedgehog
#define MIN_VERSION_hedgehog(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 5)
#endif /* MIN_VERSION_hedgehog */
/* package hedgehog-quickcheck-0.1.1 */
#ifndef VERSION_hedgehog_quickcheck
#define VERSION_hedgehog_quickcheck "0.1.1"
#endif /* VERSION_hedgehog_quickcheck */
#ifndef MIN_VERSION_hedgehog_quickcheck
#define MIN_VERSION_hedgehog_quickcheck(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 1)
#endif /* MIN_VERSION_hedgehog_quickcheck */
/* package iproute-1.7.11 */
#ifndef VERSION_iproute
#define VERSION_iproute "1.7.11"
#endif /* VERSION_iproute */
#ifndef MIN_VERSION_iproute
#define MIN_VERSION_iproute(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  7 || \
  (major1) == 1 && (major2) == 7 && (minor) <= 11)
#endif /* MIN_VERSION_iproute */
/* package mtl-2.2.2 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.2.2"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_mtl */
/* package nothunks-0.1.3 */
#ifndef VERSION_nothunks
#define VERSION_nothunks "0.1.3"
#endif /* VERSION_nothunks */
#ifndef MIN_VERSION_nothunks
#define MIN_VERSION_nothunks(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 3)
#endif /* MIN_VERSION_nothunks */
/* package plutus-ledger-api-0.1.0.0 */
#ifndef VERSION_plutus_ledger_api
#define VERSION_plutus_ledger_api "0.1.0.0"
#endif /* VERSION_plutus_ledger_api */
#ifndef MIN_VERSION_plutus_ledger_api
#define MIN_VERSION_plutus_ledger_api(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_plutus_ledger_api */
/* package process-extras-0.7.4 */
#ifndef VERSION_process_extras
#define VERSION_process_extras "0.7.4"
#endif /* VERSION_process_extras */
#ifndef MIN_VERSION_process_extras
#define MIN_VERSION_process_extras(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 4)
#endif /* MIN_VERSION_process_extras */
/* package serialise-0.2.3.0 */
#ifndef VERSION_serialise
#define VERSION_serialise "0.2.3.0"
#endif /* VERSION_serialise */
#ifndef MIN_VERSION_serialise
#define MIN_VERSION_serialise(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_serialise */
/* package set-algebra-0.1.0.0 */
#ifndef VERSION_set_algebra
#define VERSION_set_algebra "0.1.0.0"
#endif /* VERSION_set_algebra */
#ifndef MIN_VERSION_set_algebra
#define MIN_VERSION_set_algebra(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_set_algebra */
/* package small-steps-0.1.0.0 */
#ifndef VERSION_small_steps
#define VERSION_small_steps "0.1.0.0"
#endif /* VERSION_small_steps */
#ifndef MIN_VERSION_small_steps
#define MIN_VERSION_small_steps(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_small_steps */
/* package small-steps-test-0.1.0.0 */
#ifndef VERSION_small_steps_test
#define VERSION_small_steps_test "0.1.0.0"
#endif /* VERSION_small_steps_test */
#ifndef MIN_VERSION_small_steps_test
#define MIN_VERSION_small_steps_test(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_small_steps_test */
/* package strict-containers-0.1.0.0 */
#ifndef VERSION_strict_containers
#define VERSION_strict_containers "0.1.0.0"
#endif /* VERSION_strict_containers */
#ifndef MIN_VERSION_strict_containers
#define MIN_VERSION_strict_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_strict_containers */
/* package tasty-1.4.1 */
#ifndef VERSION_tasty
#define VERSION_tasty "1.4.1"
#endif /* VERSION_tasty */
#ifndef MIN_VERSION_tasty
#define MIN_VERSION_tasty(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_VERSION_tasty */
/* package tasty-hunit-0.10.0.3 */
#ifndef VERSION_tasty_hunit
#define VERSION_tasty_hunit "0.10.0.3"
#endif /* VERSION_tasty_hunit */
#ifndef MIN_VERSION_tasty_hunit
#define MIN_VERSION_tasty_hunit(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 0)
#endif /* MIN_VERSION_tasty_hunit */
/* package tasty-quickcheck-0.10.1.2 */
#ifndef VERSION_tasty_quickcheck
#define VERSION_tasty_quickcheck "0.10.1.2"
#endif /* VERSION_tasty_quickcheck */
#ifndef MIN_VERSION_tasty_quickcheck
#define MIN_VERSION_tasty_quickcheck(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 1)
#endif /* MIN_VERSION_tasty_quickcheck */
/* package text-1.2.4.1 */
#ifndef VERSION_text
#define VERSION_text "1.2.4.1"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 4)
#endif /* MIN_VERSION_text */
/* package time-1.9.3 */
#ifndef VERSION_time
#define VERSION_time "1.9.3"
#endif /* VERSION_time */
#ifndef MIN_VERSION_time
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  9 || \
  (major1) == 1 && (major2) == 9 && (minor) <= 3)
#endif /* MIN_VERSION_time */
/* package transformers-0.5.6.2 */
#ifndef VERSION_transformers
#define VERSION_transformers "0.5.6.2"
#endif /* VERSION_transformers */
#ifndef MIN_VERSION_transformers
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 6)
#endif /* MIN_VERSION_transformers */
/* package tree-diff-0.2 */
#ifndef VERSION_tree_diff
#define VERSION_tree_diff "0.2"
#endif /* VERSION_tree_diff */
#ifndef MIN_VERSION_tree_diff
#define MIN_VERSION_tree_diff(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_tree_diff */
/* package vector-0.12.3.0 */
#ifndef VERSION_vector
#define VERSION_vector "0.12.3.0"
#endif /* VERSION_vector */
#ifndef MIN_VERSION_vector
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 3)
#endif /* MIN_VERSION_vector */

/* tool gcc-9 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "9"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  0 || \
  (major1) == 9 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */
/* tool ghc-8.10.7 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "8.10.7"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_ghc */
/* tool ghc-pkg-8.10.7 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "8.10.7"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_ghc_pkg */
/* tool haddock-2.24.2 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.24.2"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  24 || \
  (major1) == 2 && (major2) == 24 && (minor) <= 2)
#endif /* MIN_TOOL_VERSION_haddock */
/* tool hpc-0.68 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.68"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */
/* tool hsc2hs-0.68.7 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.7"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_hsc2hs */
/* tool pkg-config-0.29.1 */
#ifndef TOOL_VERSION_pkg_config
#define TOOL_VERSION_pkg_config "0.29.1"
#endif /* TOOL_VERSION_pkg_config */
#ifndef MIN_TOOL_VERSION_pkg_config
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  29 || \
  (major1) == 0 && (major2) == 29 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_pkg_config */
/* tool runghc-8.10.7 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "8.10.7"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_runghc */
/* tool strip-2.34 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.34"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  34 || \
  (major1) == 2 && (major2) == 34 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "cardano-ledger-shelley-test-0.1.0.0-6b9d3174a2c29c0ff30b84290e2136252a8cb33a67f142d18f8adf3d695c02a6"
#endif /* CURRENT_packageKey */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "cardano-ledger-shelley-test-0.1.0.0-6b9d3174a2c29c0ff30b84290e2136252a8cb33a67f142d18f8adf3d695c02a6"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.1.0.0"
#endif /* CURRENT_PACKAGE_VERSION */
